name: 'Setup godot templates'
description: 'Setup godot templates with or without encryption key'
# inputs:
#   version:
#     description: 'Godot version'
#     required: true
#     default: '4.3'
#   encryption-key:
#     description: 'Encryption key for templates'
#     default: ''
#   token:
#     description: 'Github token'
#     required: true
# runs:
#   using: "composite"
#   steps:
#     - uses: actions/checkout@v4
#       with:
#         repository: godotengine/godot
#         token: $TOKEN
#         path: godot
#       env:
#         TOKEN: ${{ inputs.token }}

inputs:
  target:
    description: Build target (editor, template_release, template_debug).
    default: editor
  platform:
    description: Target platform.
    required: false
  scons-cache:
    description: The SCons cache path.
    default: ${{ github.workspace }}/.scons-cache/
  scons-cache-limit:
    description: The SCons cache size limit.
  
  version:
    description: 'Godot version'
    required: true
    default: '4.3'
  token:
    description: 'Github token'
    required: true
  encryption-key:
    description: 'Encryption key for templates'
    default: ''

    # actions/cache has 10 GiB limit, and GitHub runners have a 14 GiB disk.
    # Limit to 7 GiB to avoid having the extracted cache fill the disk.
    # default: 7168

runs:
  # using: composite
  # steps:
    # - name: Restore SCons cache directory
    #   uses: actions/cache/restore@v4
    #   with:
    #     path: ${{ inputs.scons-cache }}
    #     key: ${{ inputs.cache-name }}-${{ github.ref }}-${{ github.sha }}
    # - name: SCons Build
    #   shell: sh
    #   env:
    #     SCONSFLAGS: ${{ inputs.sconsflags }}
    #     SCONS_CACHE: ${{ inputs.scons-cache }}
    #     SCONS_CACHE_LIMIT: ${{ inputs.scons-cache-limit }}
    #   run: |
    #     echo "Building with flags:" platform=${{ inputs.platform }} target=${{ inputs.target }} tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}

    #     if [ "${{ inputs.target }}" != "editor" ]; then
    #       # Ensure we don't include editor code in export template builds.
    #       rm -rf editor
    #     fi

    #     if [ "${{ github.event.number }}" != "" ]; then
    #       # Set build identifier with pull request number if available. This is displayed throughout the editor.
    #       export BUILD_NAME="gh-${{ github.event.number }}"
    #     else
    #       export BUILD_NAME="gh"
    #     fi

    #     scons platform=${{ inputs.platform }} target=${{ inputs.target }} tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}
    #     ls -l bin/
    # - name: Save SCons cache directory
    #   uses: actions/cache/save@v4
    #   with:
    #     path: ${{ inputs.scons-cache }}
    #     key: ${{ github.job }}-${{ github.ref }}-${{ github.sha }}
    
    # - run: |
    #     export SCRIPT_AES256_ENCRYPTION_KEY="$ENCRYPTION_KEY"
    #     scons platform=linuxbsd target=template_release arch=x86_64
    #     scons platform=linuxbsd target=template_debug arch=x86_64
    #   shell: bash
    #   env:
    #     ENCRYPTION_KEY: ${{ inputs.encryption-key }}

  using: "docker"
  image: "Dockerfile"
  args:
    - ${{ inputs.version }}
    - ${{ inputs.token }}
    - ${{ inputs.encryption-key }}