name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  GAME: godot-template
  GODOT_VERSION: 4.3
  STEAM_APP: 430

jobs:
  generate-password:
    runs-on: ubuntu-latest
    outputs:
      password: ${{ steps.random-password.outputs.password }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/password
        id: random-password
        with:
          length: 8

  release:
    runs-on: ubuntu-latest
    needs: generate-password
    container:
      image: barichello/godot-ci:4.3
    strategy:
      matrix:
        channel: [web, win, linux]
    env:
      CHANNEL: ${{matrix.channel}}
    steps:
      - uses: actions/checkout@v4

      - uses: kuma-gee/action-protect-assets@v1
        with:
          path: assets
          password: ${{ secrets.GODOT_ASSETS_PASSWORD }}

      - uses: ./.github/actions/godot-env
        with:
          output: src/build.gd
          code: ${{ secrets.GAME_CODE }}
          version: ${{ github.ref }}
          steam-app: ${{ env.STEAM_APP }}

      - uses: ./.github/actions/godot-build
        with:
          output: src/build.gd

      - uses: game-ci/steam-deploy@v3
        with:
          username: ${{ secrets.STEAM_USERNAME }}          
          configVdf: ${{ secrets.STEAM_CONFIG_VDF }}          
          appId: 1234560
          buildDescription: $GITHUB_REF_NAME
          rootPath: build
          depot1Path: StandaloneWindows64
          depot1InstallScriptPath: StandaloneWindows64/install_script.vdf
          depot2Path: StandaloneLinux64
          releaseBranch: prerelease

      - name: Publish Itch
        if: env.BUTLER_API_KEY && env.USER && env.GAME && !contains(github.ref, '-rc')
        shell: bash
        env:
          BUTLER_API_KEY: ${{secrets.BUTLER_API_KEY}}
          USER: ${{secrets.ITCHIO_USER}}
        run: butler push build/$CHANNEL $USER/$GAME:$CHANNEL --userversion $GITHUB_REF_NAME

      - name: Package builds
        if: env.CHANNEL != 'mac'
        run: |
          cd build
          mv $CHANNEL $GAME
          echo "$"zip -e -r $GAME-$CHANNEL.zip $GAME
        env:
          PASSWORD: ${{ needs.generate-password.outputs.password }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.channel }}
          path: build/**/*.zip

  github-release:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: ./.github/workflows/github-release.yml
        with:
          artifact: release-*
          password: ${{ secrets.GODOT_ASSETS_PASSWORD }}