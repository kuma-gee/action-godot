name: Test for custom actions

on:
  push:
    branches:
      - main
  
jobs:
  test-godot-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/godot-env
        with:
          output: build.gd
          code: secret-game-code
          version: v1.0
          steam-app: 12345
      - run: |
          if ! grep -q v1.0 "$File"; then
            echo "::error::Game Version missing in file"
            exit 1
          elif ! grep -q $EXPECTED_HASH "$File"; then
            echo "::error::Game Hash missing in file"
            exit 1
          elif ! grep -q 12345 "$File"; then
            echo "::error::Steam App Id missing in file"
            exit 1
          fi
        shell: bash
        env:
          File: build.gd
          EXPECTED_HASH: bccc92b5f6c23cd6c5df292f608632278e0605f8540afeee9d258f7a2a8a6087

  test-password:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/password
        id: random-password-1
        with:
          length: 5
      - uses: ./.github/actions/password
        id: random-password-2
        with:
          length: 10
      - uses: ./.github/actions/password
        id: random-password-3
        with:
          length: 100
      - run: |
          echo "::debug::Generated password: $password1, $password2, $password3"

          if [ ${#password1} -ne 5 ]; then
            echo "::error::Password length is not 5"
            exit 1
          fi

          if [ ${#password2} -ne 10 ]; then
            echo "::error::Password length is not 10"
            exit 1
          fi

          if [ ${#password3} -ne 100 ]; then
            echo "::error::Password length is not 100"
            exit 1
          fi

          if [ "$password1" == "$password2" ]; then
            echo "::error::Passwords 1 and 2 are the same"
            exit 1
          fi

          if [ "$password1" == "$password3" ]; then
            echo "::error::Passwords 1 and 3 are the same"
            exit 1
          fi

          if [ "$password2" == "$password3" ]; then
            echo "::error::Passwords 2 and 3 are the same"
            exit 1
          fi
        shell: bash
        env:
          password1: ${{ steps.random-password-1.outputs.password }}
          password2: ${{ steps.random-password-2.outputs.password }}
          password3: ${{ steps.random-password-3.outputs.password }}
