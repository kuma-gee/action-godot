name: Steam Release

on:
  workflow_call:
    inputs:
      steam_app:
        description: 'Steam App ID'
        type: number
        default: 430
        required: true
      branch:
        description: 'Steam branch to release'
        type: string
        default: ''
      godot-version:
        description: 'Godot version'
        type: string
        default: '4.3'
      project-path:
        description: 'Path to the project'
        type: string
        default: '.'
      assets-path:
        description: 'Path to the assets relative to the project'
        type: string
        default: 'assets'
      env-build-file:
        description: 'Path to the build env file relative to the project'
        type: string
        default: 'build.gd'
      release-discord:
        description: 'Release for discord'
        type: boolean
        default: false

    secrets:
      STEAM_USERNAME:
        description: 'Steam username'
        required: false 
      STEAM_CONFIG_VDF:
        description: 'Steam config.vdf'
        required: false
      ENCRYPTION_KEY:
        description: 'Encryption key'
        required: false
      GAME_CODE:
        description: 'Game code'
        required: false
      ASSETS_PASSWORD:
        description: 'Password for the assets'
        required: false
      DISCORD_RELEASE_HOOK:
        description: 'Discord release hook'
        required: false

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  generate-password:
    runs-on: ubuntu-latest
    outputs:
      password: ${{ steps.random-password.outputs.password }}
    steps:
      - uses: actions/checkout@v4
      - uses: kuma-gee/action-godot/password@main
        id: random-password
        with:
          length: 24
  
  build-game:
    runs-on: ubuntu-latest
    needs: generate-password
    container: barichello/godot-ci:${{ inputs.godot-version }}
    strategy:
      matrix:
        channel: [windows, linux]
    outputs:
      game: ${{ steps.game-name.outputs.game }}
    steps:
      - uses: actions/checkout@v4

      - name: Unpack protected assets
        if: env.ASSETS_PASSWORD
        uses: kuma-gee/action-protect-assets@v1
        with:
          path: ${{ inputs.project-path }}/${{ inputs.assets-path }}
          password: ${{ secrets.ASSETS_PASSWORD }}
        env:
          ASSETS_PASSWORD: ${{ secrets.ASSETS_PASSWORD }}

      - name: Create Godot Environment File
        uses: kuma-gee/action-godot/godot-env@main
        with:
          output: ${{ inputs.project-path }}/${{ inputs.env-build-file }}
          code: ${{ secrets.GAME_CODE }}
          version: ${{ github.ref_name }}
          steam-app: ${{ inputs.steam_app }}

      - name: Setup Templates
        uses: kuma-gee/action-godot-template/setup@v1
        with:
          version: ${{ inputs.godot-version }}
          channel: ${{ matrix.channel }}
          encryption-key: ${{ secrets.ENCRYPTION_KEY }}
          game-folder: ${{ inputs.project-path }}

      - uses: kuma-gee/action-godot/godot-build@main
        with:
          channel: ${{ matrix.channel }}
          output: build
          game-folder: ${{ inputs.project-path }}
          password: ${{ needs.generate-password.outputs.password }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.channel }}
          path: build/*.zip

  release-steam:
    needs: [generate-password, build-game]
    runs-on: ubuntu-latest
    if: inputs.branch != ''
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: release-*
          merge-multiple: true
      
      - run: |
          unzip -P $PASSWORD -d linux $GAME-linux.zip
          unzip -P $PASSWORD -d linux $GAME-windows.zip
        env:
          PASSWORD: ${{ needs.generate-password.outputs.password }}
          GAME: ${{ needs.build-game.outputs.game }}

      - uses: game-ci/steam-deploy@v3
        with:
          username: ${{ secrets.STEAM_USERNAME }}          
          configVdf: ${{ secrets.STEAM_CONFIG_VDF }}          
          appId: ${{ inputs.steam_app }}
          buildDescription: ${{ github.ref_name }}
          rootPath: build
          depot1Path: windows
          depot2Path: linux
          releaseBranch: ${{ inputs.branch }}

  release-steam-github:
    needs: [generate-password, build-game]
    uses: kuma-gee/action-godot/.github/workflows/github-release.yml@main
    if: inputs.release-discord
    with:
      artifact: release-*
      branch: ${{ inputs.branch }}
    secrets:
      discord-webhook: ${{ secrets.DISCORD_RELEASE_HOOK }}
      password: ${{ needs.generate-password.outputs.password }}